// <auto-generated />
using System;
using App_19k.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace App_19k.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191006085912_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("App_19k.Domain.Administrador", b =>
                {
                    b.Property<int>("AdministradorId").HasColumnName("AdministradorId");                  

                    b.HasKey("AdministradorId");

                    b.HasIndex("AdministradorId");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("App_19k.Domain.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NDepartamento");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("App_19k.Domain.DetalleSuministro", b =>
                {
                    b.Property<int>("DetalleSuministroId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumCantidad");

                    b.Property<int>("ProyectoId");

                    b.Property<int>("SuministroId");

                    b.Property<string>("TTipoCantidad");

                    b.HasKey("DetalleSuministroId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("DetalleSuministros");
                });

            modelBuilder.Entity("App_19k.Domain.Distribuidor", b =>
                {
                    b.Property<int>("DistribuidorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NDistribuidor");

                    b.HasKey("DistribuidorId");

                    b.ToTable("Distribuidores");
                });

            modelBuilder.Entity("App_19k.Domain.Distrito", b =>
                {
                    b.Property<int>("DistritoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NDistrito");

                    b.Property<int>("ProvinciaId");

                    b.HasKey("DistritoId");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Distritos");
                });

            modelBuilder.Entity("App_19k.Domain.Entrega", b =>
                {
                    b.Property<int>("EntregaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad");

                    b.Property<DateTime>("DFechaEntrega");

                    b.Property<int>("DetalleSuministroId");

                    b.HasKey("EntregaId");

                    b.HasIndex("DetalleSuministroId");

                    b.ToTable("Entregas");
                });

            modelBuilder.Entity("App_19k.Domain.Provincia", b =>
                {
                    b.Property<int>("ProvinciaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartamentoId");

                    b.Property<string>("NProvincia");

                    b.HasKey("ProvinciaId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("App_19k.Domain.Proyecto", b =>
                {
                    b.Property<int>("ProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DFechaFinalObra");

                    b.Property<DateTime>("DInicioSuministro");

                    b.Property<int>("DistritoId");

                    b.Property<decimal>("MPrecioSolicitado");

                    b.Property<string>("NConstructora");

                    b.Property<string>("NProyecto");

                    b.Property<decimal>("NumArea");

                    b.Property<long>("NumLicencia");

                    b.Property<int>("NumTiempoSuministro");

                    b.Property<string>("TActividadEconomicaEmpresa");

                    b.Property<string>("TDireccion");

                    b.Property<string>("TEstatusProyecto");

                    b.Property<string>("TMarcaProveedorActual");

                    b.Property<string>("TRucConstructora");

                    b.Property<string>("TTipoInversion");

                    b.Property<string>("TTipoSolicitud");

                    b.Property<int>("VendedorId");

                    b.HasKey("ProyectoId");

                    b.HasIndex("DistritoId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("App_19k.Domain.Suministro", b =>
                {
                    b.Property<int>("SuministroId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NSuministro");

                    b.HasKey("SuministroId");

                    b.ToTable("Suministros");
                });

            modelBuilder.Entity("App_19k.Domain.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NUsuario");

                    b.Property<string>("TPassword");

                    b.Property<string>("TUserName");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("App_19k.Domain.Vendedor", b =>
                {
                    b.Property<int>("VendedorId").HasColumnName("VendedorId");

                    b.Property<int>("DistribuidorId");

                    b.Property<string>("TDni");

                    b.Property<string>("TEstado");     

                    b.HasKey("VendedorId");

                    b.HasIndex("DistribuidorId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("App_19k.Domain.Administrador", b =>
                {
                    b.HasOne("App_19k.Domain.Administrador", "AdministradorNavigation")
               .WithOne("Administrador")
               .HasForeignKey("App_19k.Domain.Administrador", "AdministradorId");
                });

            modelBuilder.Entity("App_19k.Domain.DetalleSuministro", b =>
                {
                    b.HasOne("App_19k.Domain.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Distrito", b =>
                {
                    b.HasOne("App_19k.Domain.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Entrega", b =>
                {
                    b.HasOne("App_19k.Domain.DetalleSuministro", "DetalleSuministro")
                        .WithMany()
                        .HasForeignKey("DetalleSuministroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Provincia", b =>
                {
                    b.HasOne("App_19k.Domain.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Proyecto", b =>
                {
                    b.HasOne("App_19k.Domain.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("App_19k.Domain.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Vendedor", b =>
                {
                    b.HasOne("App_19k.Domain.Distribuidor", "Distribuidor")
                        .WithMany()
                        .HasForeignKey("DistribuidorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("App_19k.Domain.Usuario", "VendedorNavigation")
                        .WithOne("Vendedor")
                        .HasForeignKey("App_19k.Domain.Vendedor", "VendedorId");
                });
#pragma warning restore 612, 618
        }
    }
}
